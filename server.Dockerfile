FROM node:22.18-alpine AS base


FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY package.json package-lock.json ./
RUN npm install --frozen-lockfile


FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .


FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
RUN addgroup --system --gid 1001 nodejs

USER nodejs

ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG NEXT_PUBLIC_GOOGLE_GENERATIVE_AI_API_KEY
ARG GOOGLE_GENERATIVE_AI_API_KEY
ARG AUTH_SECRET
ARG BLOB_READ_WRITE_TOKEN
ARG POSTGRES_URL
ARG BACKEND_HOSTPORT
ARG NEXT_PUBLIC_WS_PORT
ARG WS_PORT

ENV GOOGLE_CLIENT_ID $GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET $GOOGLE_CLIENT_SECRET
ENV NEXT_PUBLIC_GOOGLE_GENERATIVE_AI_API_KEY $NEXT_PUBLIC_GOOGLE_GENERATIVE_AI_API_KEY
ENV GOOGLE_GENERATIVE_AI_API_KEY $GOOGLE_GENERATIVE_AI_API_KEY
ENV AUTH_SECRET $AUTH_SECRET
ENV BLOB_READ_WRITE_TOKEN $BLOB_READ_WRITE_TOKEN
ENV POSTGRES_URL $POSTGRES_URL
ENV BACKEND_HOSTPORT $BACKEND_HOSTPORT
ENV NEXT_PUBLIC_WS_PORT $NEXT_PUBLIC_WS_PORT
ENV WS_PORT $WS_PORT
ENV HOSTNAME "0.0.0.0"

EXPOSE 3001

CMD ["node", "server.ts"]
